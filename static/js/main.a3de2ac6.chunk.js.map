{"version":3,"sources":["components/about.js","components/resume.js","components/contact.js","components/projects.js","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","Component","Resume","Contact","Projects","App","BrowserRouter","className","Navbar","bsStyle","Header","Brand","Glyphicon","glyph","Nav","NavItem","eventKey","Link","to","href","width","height","alt","src","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kOAaeA,0LARX,OACIC,EAAAC,EAAAC,cAAA,2BAHYC,cCULC,mLARX,OACIJ,EAAAC,EAAAC,cAAA,4BAHaC,aCUNE,mLARX,OACIL,EAAAC,EAAAC,cAAA,6BAHcC,aCUPG,mLARX,OACIN,EAAAC,EAAAC,cAAA,8BAHeC,wCCgFRI,mLAvEX,OACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,UAAQO,UAAU,cAChBT,EAAAC,EAAAC,cAAA,mCAGAF,EAAAC,EAAAC,cAAA,oCAIFF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQC,QAAQ,cAChBX,EAAAC,EAAAC,cAACQ,EAAA,EAAOE,OAAR,KACEZ,EAAAC,EAAAC,cAACQ,EAAA,EAAOG,MAAR,KACIb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAWC,MAAM,WAGvBf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAASC,SAAU,GACjBlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAG,UAAT,UAIFpB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAASC,SAAU,GACjBlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAG,WAAT,WAIFpB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAASC,SAAU,GACjBlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAG,aAAT,aAIFpB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAASC,SAAU,GACjBlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAG,YAAT,cAMJpB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBAGAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,wDACNrB,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,GAAIC,OAAQ,GAAIC,IAAI,KAAKC,IAAI,gBAAgBhB,UAAU,aAErET,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,yCACNrB,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,GAAIC,OAAQ,GAAIC,IAAI,KAAKC,IAAI,eAAehB,UAAU,aAEpET,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,iCACNrB,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,GAAIC,OAAQ,GAAIC,IAAI,KAAKC,IAAI,YAAYhB,UAAU,UAAUY,KAAK,MAEhFrB,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,4CACNrB,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,GAAIC,OAAQ,GAAIC,IAAI,KAAKC,IAAI,iBAAiBhB,UAAU,eAM1ET,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAW7B,IAChCC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWxB,IACjCJ,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWtB,IACnCN,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWvB,aAlE1BF,aCEE0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a3de2ac6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './component.css';\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n            About\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport './component.css';\r\n\r\nclass Resume extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n            Resume\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","import React, { Component } from 'react';\r\nimport './component.css';\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n            Contact\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport './component.css';\r\n\r\nclass Projects extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n            projects\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Navbar, Nav, NavItem, Glyphicon } from 'react-bootstrap';\nimport About from './components/about'\nimport Resume from './components/resume'\nimport Contact from './components/contact'\nimport Projects from './components/projects'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>\n              Hi! I'm Cameron Pavao\n            </h1>\n            <small>\n              Welcome to my site\n            </small>\n          </header>\n          <Navbar bsStyle=\"nav-custom\">\n          <Navbar.Header>\n            <Navbar.Brand>\n                <Glyphicon glyph=\"home\" />\n            </Navbar.Brand>\n          </Navbar.Header>\n          <Nav>\n            <NavItem eventKey={1}>\n              <Link to=\"/about\">\n                About\n              </Link>\n            </NavItem>\n            <NavItem eventKey={2}>\n              <Link to=\"/resume\">\n                Resume\n              </Link>\n            </NavItem>\n            <NavItem eventKey={3}>\n              <Link to=\"/projects\">\n                Projects\n              </Link>\n            </NavItem>\n            <NavItem eventKey={4}>\n              <Link to=\"/contact\">\n                Contact\n              </Link>\n            </NavItem>\n          </Nav>\n          </Navbar>\n          <body>\n            <h2>\n              Socials\n            </h2>\n            <div >\n              <a href=\"https://www.linkedin.com/in/cameron-pavao-0928b2140/\">\n                <img width={50} height={50} alt=\"25\" src=\"/linkedin.ico\" className='socials' />\n              </a>\n              <a href=\"https://www.twitter.com/allcamadianeh\">\n                <img width={50} height={50} alt=\"25\" src=\"/twitter.ico\" className='socials' />\n              </a>\n              <a href=\"mailto:cameronpavao@gmail.com\">\n                <img width={50} height={50} alt=\"25\" src=\"/mail.ico\" className='socials' href=\"\"/>\n              </a>\n              <a href=\"https://www.instagram.com/camcorderpavao\">\n                <img width={50} height={50} alt=\"25\" src=\"/instagram.ico\" className='socials' />\n              </a>\n            </div>\n          </body>\n\n\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/resume\" component={Resume} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/contact\" component={Contact} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}